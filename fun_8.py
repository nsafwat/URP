import numpy as np
    
def fun_8(PL = None,A = None,a = None,b = None,seta_A2G_C = None,B = None): 
    #FUN_8
#    EQN_0 = FUN_8(R,PL,A,A,B,SETA_A2G_C,B)
    
    #    This function was generated by the Symbolic Math Toolbox version 8.1.
#    06-Jan-2021 21:22:51
    
    eqn_0 = lambda R = None: B - PL + (np.multiply(np.log(R / np.cos(np.multiply(np.multiply(seta_A2G_C,np.pi),(1.0 / 180.0)))),20.0)) / np.log(10.0) + A / (np.multiply(a,np.exp(np.multiply(b,(a - seta_A2G_C)))) + 1.0)
    return eqn_0