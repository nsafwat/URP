import numpy as np
    
def fun_7(a = None,b = None,A = None): 
    #FUN_7
#    EQN_1 = FUN_7(SETA_A2G,A,B,A)
    
    #    This function was generated by the Symbolic Math Toolbox version 8.1.
#    06-Jan-2021 21:14:53
    
    # t2 = a-seta_A2G;
# t3 = b.*(a-seta_A2G);
# t4 = exp(b.*(a-seta_A2G));
    eqn_1 = lambda seta_A2G = None: np.multiply(np.multiply(np.pi,np.tan(np.multiply(np.multiply(seta_A2G,np.pi),(1.0 / 180.0)))),(10.0 / 207.0)) + np.multiply(np.multiply(np.multiply(np.multiply(A,a),b),np.exp(np.multiply(b,(a - seta_A2G)))),1.0) / (np.multiply(a,np.exp(np.multiply(b,(a - seta_A2G)))) + 1.0) ** 2
    return eqn_1